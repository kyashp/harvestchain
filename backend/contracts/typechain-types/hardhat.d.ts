/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "HarvestChainEscrowAI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HarvestChainEscrowAI__factory>;
    getContractFactory(
      name: "IAIPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAIPriceOracle__factory>;
    getContractFactory(
      name: "ICreditScoreOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICreditScoreOracle__factory>;
    getContractFactory(
      name: "IDeliveryOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDeliveryOracle__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ISSIRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISSIRegistry__factory>;
    getContractFactory(
      name: "CreditScoreOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CreditScoreOracle__factory>;
    getContractFactory(
      name: "MockUSD",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockUSD__factory>;
    getContractFactory(
      name: "IAIPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAIPriceOracle__factory>;
    getContractFactory(
      name: "IDeliveryOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDeliveryOracle__factory>;
    getContractFactory(
      name: "MockAIOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockAIOracle__factory>;
    getContractFactory(
      name: "MockDeliveryOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockDeliveryOracle__factory>;
    getContractFactory(
      name: "SSIRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SSIRegistry__factory>;

    getContractAt(
      name: "HarvestChainEscrowAI",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HarvestChainEscrowAI>;
    getContractAt(
      name: "IAIPriceOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAIPriceOracle>;
    getContractAt(
      name: "ICreditScoreOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ICreditScoreOracle>;
    getContractAt(
      name: "IDeliveryOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDeliveryOracle>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ISSIRegistry",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISSIRegistry>;
    getContractAt(
      name: "CreditScoreOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CreditScoreOracle>;
    getContractAt(
      name: "MockUSD",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockUSD>;
    getContractAt(
      name: "IAIPriceOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAIPriceOracle>;
    getContractAt(
      name: "IDeliveryOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDeliveryOracle>;
    getContractAt(
      name: "MockAIOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockAIOracle>;
    getContractAt(
      name: "MockDeliveryOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockDeliveryOracle>;
    getContractAt(
      name: "SSIRegistry",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SSIRegistry>;

    deployContract(
      name: "HarvestChainEscrowAI",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HarvestChainEscrowAI>;
    deployContract(
      name: "IAIPriceOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAIPriceOracle>;
    deployContract(
      name: "ICreditScoreOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ICreditScoreOracle>;
    deployContract(
      name: "IDeliveryOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDeliveryOracle>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "ISSIRegistry",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISSIRegistry>;
    deployContract(
      name: "CreditScoreOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CreditScoreOracle>;
    deployContract(
      name: "MockUSD",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockUSD>;
    deployContract(
      name: "IAIPriceOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAIPriceOracle>;
    deployContract(
      name: "IDeliveryOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDeliveryOracle>;
    deployContract(
      name: "MockAIOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockAIOracle>;
    deployContract(
      name: "MockDeliveryOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockDeliveryOracle>;
    deployContract(
      name: "SSIRegistry",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SSIRegistry>;

    deployContract(
      name: "HarvestChainEscrowAI",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HarvestChainEscrowAI>;
    deployContract(
      name: "IAIPriceOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAIPriceOracle>;
    deployContract(
      name: "ICreditScoreOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ICreditScoreOracle>;
    deployContract(
      name: "IDeliveryOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDeliveryOracle>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "ISSIRegistry",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISSIRegistry>;
    deployContract(
      name: "CreditScoreOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CreditScoreOracle>;
    deployContract(
      name: "MockUSD",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockUSD>;
    deployContract(
      name: "IAIPriceOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAIPriceOracle>;
    deployContract(
      name: "IDeliveryOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDeliveryOracle>;
    deployContract(
      name: "MockAIOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockAIOracle>;
    deployContract(
      name: "MockDeliveryOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockDeliveryOracle>;
    deployContract(
      name: "SSIRegistry",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SSIRegistry>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
