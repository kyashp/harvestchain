/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IAIPriceOracle,
  IAIPriceOracleInterface,
} from "../../oracles/IAIPriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "marketKey",
        type: "bytes32",
      },
    ],
    name: "getFloorPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "pricePerUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "confidence",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IAIPriceOracle__factory {
  static readonly abi = _abi;
  static createInterface(): IAIPriceOracleInterface {
    return new Interface(_abi) as IAIPriceOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IAIPriceOracle {
    return new Contract(address, _abi, runner) as unknown as IAIPriceOracle;
  }
}
